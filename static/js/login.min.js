const {
  useState
} = React;
function LoginForm() {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [error, setError] = useState('');
  const [loading, setLoading] = useState(false);
  const handleSubmit = async e => {
    e.preventDefault();
    setLoading(true);
    setError('');
    try {
      const response = await fetch('/login', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          username,
          password
        })
      });
      const data = await response.json();
      if (data.success) {
        window.location.href = '/';
      } else {
        setError(data.message || 'Login failed');
      }
    } catch (err) {
      setError('An error occurred. Please try again.');
    } finally {
      setLoading(false);
    }
  };
  return /*#__PURE__*/React.createElement("div", {
    className: "flex justify-center items-center min-h-screen p-5"
  }, /*#__PURE__*/React.createElement("div", {
    className: "bg-white p-8 rounded-lg shadow-2xl w-full max-w-md"
  }, /*#__PURE__*/React.createElement("h1", {
    className: "text-2xl font-semibold text-center mb-8 text-gray-800"
  }, "SlashRoll Login"), error && /*#__PURE__*/React.createElement("div", {
    className: "bg-secondary-400 text-secondary-800 p-3 rounded mb-5 text-center"
  }, error), /*#__PURE__*/React.createElement("form", {
    onSubmit: handleSubmit
  }, /*#__PURE__*/React.createElement("div", {
    className: "mb-5"
  }, /*#__PURE__*/React.createElement("label", {
    htmlFor: "username",
    className: "block mb-2 font-medium text-gray-600"
  }, "Username"), /*#__PURE__*/React.createElement("input", {
    type: "text",
    id: "username",
    value: username,
    onChange: e => setUsername(e.target.value),
    required: true,
    disabled: loading,
    className: "w-full px-4 py-3 border border-gray-300 rounded text-base box-border focus:outline-none focus:border-primary-600 focus:ring-2 focus:ring-primary-600 focus:ring-opacity-25"
  })), /*#__PURE__*/React.createElement("div", {
    className: "mb-6"
  }, /*#__PURE__*/React.createElement("label", {
    htmlFor: "password",
    className: "block mb-2 font-medium text-gray-600"
  }, "Password"), /*#__PURE__*/React.createElement("input", {
    type: "password",
    id: "password",
    value: password,
    onChange: e => setPassword(e.target.value),
    required: true,
    disabled: loading,
    className: "w-full px-4 py-3 border border-gray-300 rounded text-base box-border focus:outline-none focus:border-primary-600 focus:ring-2 focus:ring-primary-600 focus:ring-opacity-25"
  })), /*#__PURE__*/React.createElement("button", {
    type: "submit",
    disabled: loading,
    className: "w-full bg-primary-600 hover:bg-primary-700 text-white px-5 py-3 rounded cursor-pointer text-base font-medium transition-colors disabled:bg-neutral-400 disabled:cursor-not-allowed"
  }, loading ? 'Logging in...' : 'Login'), loading && /*#__PURE__*/React.createElement("div", {
    className: "text-center mt-3 text-gray-600"
  }, "Please wait..."))));
}
ReactDOM.render(/*#__PURE__*/React.createElement(LoginForm, null), document.getElementById('root'));
